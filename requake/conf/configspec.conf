#### Configuration file for Requake

#### Station metadata and waveform data
## FDSN station webservice URL to retrieve station metadata.
## Use a full URL or a ObsPy shortcut (e.g., IRIS, RESIF, GEOFON, ...)
fdsn_station_url = string(default=http://example.com)
## FDSN dataselect webservice URL to retrieve waveforms.
## Use a full URL or a ObsPy shortcut (e.g., IRIS, RESIF, GEOFON, ...)
fdsn_dataselect_url = string(default=http://example.com)

#### Catalog-based scan
### The following parameters are for a catalog-based scan:
### each catalog event is compared with the other catalog events within
### a certain distance range. Similarity is checked by waveform
### cross-correlation at one or more stations.
### To perform a catalog-based scan use:
###    requake scan_catalog
## FDSN event webservice URL to retrieve event catalogs.
## Use a full URL or a ObsPy shortcut (e.g., IRIS, RESIF, GEOFON, ...)
catalog_fdsn_event_url = string(default=http://example.com)
## start time for event selection (UTC date time)
catalog_start_time = string(default=2021-08-23T00:00:00)
## end time for event selection (UTC date time or 'now')
catalog_end_time = string(default=2021-08-24T00:00:00)
## Optionally, up to three other sources can be defined for different
## time intervals
catalog_fdsn_event_url_1 = string(default=None)
catalog_start_time_1 = string(default=None)
catalog_end_time_1 = string(default=None)
catalog_fdsn_event_url_2 = string(default=None)
catalog_start_time_2 = string(default=None)
catalog_end_time_2 = string(default=None)
catalog_fdsn_event_url_3 = string(default=None)
catalog_start_time_3 = string(default=None)
catalog_end_time_3 = string(default=None)
## geographic selection (decimal degrees)
catalog_lat_min = float(default=12.5)
catalog_lat_max = float(default=18.5)
catalog_lon_min = float(default=-62.5)
catalog_lon_max = float(default=-58.5)
## depth selection (km, positive down)
catalog_depth_min = float(default=0)
catalog_depth_max = float(default=60)
## magnitude selection
catalog_mag_min = float(default=2)
catalog_mag_max = float(default=4)
## maximum distance range to search for similar earthquakes (radius, km)
catalog_search_range = float(default=30)
## trace id(s) to compute cross-correlation, in NET.STA.LOC.CHAN format.
## Waveform data for this trace(s) id will be retrieved using the station
## webservice.
## If more than a trace_id is specified (separated by commas), the closest
## station will be used for a given event pair.
catalog_trace_id = force_list(default=NET.STA.LOC.CHAN)

#### Template-based scan
### The following parameters are for template-based scan:
### A template is used to search for similar waveforms at a given station
### over a givent time interval.
### To perform a template-based scan use:
###    requake scan_templates
## start time for template search (UTC date time)
template_start_time = string(default=2021-08-23T00:00:00)
## end time for event template search (UTC date time or 'now')
template_end_time = string(default=2021-08-24T00:00:00)
## Time chunk (in seconds) to analyze continuous data.
## Large values (1 hour or more) will result in fewer data requests and
## faster execution. However, cross-correlation can be slow for too large
## values. No more than one event per time chunk can be detected, so the
## length of time chunk should be smaller than the minimum inter-event time
## you want to detect.
time_chunk = float(default=3600)
## Overlap between time chunks (in seconds)
time_chunk_overlap = float(default=60)
## Minimum ratio between cross-correlation (cc) and median absolute deviation
## (MAD) of cross-correlation (cc_mad). A detection id declared when:
##  cc/cc_mad > min_cc_mad_ratio
min_cc_mad_ratio = float(default=50)

#### Processing parameters
## Seconds before P arrival to cut trace (only used for catalog search)
cc_pre_P = float(default=5)
## Trace length in seconds (only used for catalog search)
cc_trace_length = float(default=120)
## Frequency range for computing cross-correlation (Hz)
cc_freq_min = float(default=2)
cc_freq_max = float(default=10)
## Maximum authorized shift for computing cross-correlation (s)
cc_max_shift = float(default=5)
## Minimum cross-correlation value to declare similar waveforms
## (between 0 and 1)
cc_min = float(min=0., max=1., default=0.95)
## Clustering algorithm to create families of similar events.
## Possible options are:
##  shared : families are created by clustering all event pairs sharing
##           an event
##  UPGMA : families are created through the Unweighted Pair Group Method
##          with Arithmetic Mean (UPGMA) algorithm
##          (see https://en.wikipedia.org/wiki/UPGMA)
clustering_algorithm = option('shared', 'UPGMA', default='shared')
## Search for anticorrelated events (negative CC)
cc_allow_negative = boolean(default=false)
## How families should be sorted when assigning family numbers.
## Possible options are:
##  time : increasing origin time of first event in family (default option)
##  longitude : increasing longitude
##  latitude : increasing latitude
##  depth : increasing depth
##  distance_from : increasing horizontal distance from a given point
sort_families_by = option('time', 'longitude', 'latitude', 'depth', 'distance_from', default='time')
## Longitude and latitude of reference point,
## if sort_families_by = 'distance_from'
distance_from_lon = float(default=None)
distance_from_lat = float(default=None)
## Templates are built by averaging the traces in the family.
## Set the following paramter to True if you want to normalize the traces
## before averaging.
## Normalization will produce an average trace which is more representative
## of the family, but will be less effective in reducing noise.
normalize_traces_before_averaging = boolean(default=False)
